@page "/editHat/{HatId:int}"
@using BlazorDB.Shared.Models
@inject HttpClient Client
@inject NavigationManager NavigationManager
@inject IJSRuntime Js

<link rel="stylesheet" href="css/AddPro.css">

<link href="/validation.css" rel="stylesheet" />

<h1 class="bg-info text-white">Update</h1>

<EditForm Model="@hat" OnValidSubmit="EditHatt">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Category</label>
        <InputText class="form-control"  placeholder="Category" @bind-Value="hat.Catagory" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <InputNumber class="form-control" placeholder="Price" @bind-Value="hat.Price" />
    </div>
    <div class="form-group">
        <label>Inventory</label>
        <InputNumber class="form-control" placeholder="Inventory" @bind-Value="hat.Inventory" />
    </div>
    <div class="form-group">
        <label>Size</label>
        <InputText class="form-control" placeholder="Size" @bind-Value="hat.Size" />
    </div>
    <div class="form-group">
        <label>Material</label>
        <InputText class="form-control" placeholder="Material" @bind-Value="hat.Material" />
    </div>
    <div class="form-group">
        <label>ImgURL</label>
        <InputText class="form-control" placeholder="ImgURL" @bind-Value="hat.ImgURL" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Update</button>
    </div>
</EditForm>


@code
{
    [Parameter]
    public int HatId{get; set;}

    Product hat = new Product();

    protected async override Task OnParametersSetAsync()
    {
        var Url = @"https://blazordb.herokuapp.com/api/Product/getProductByIdFromDb/"+HatId.ToString();
        hat = await Client.GetFromJsonAsync<Product>(Url);
    }

    async Task EditHatt()
    {
        await Client.PutAsJsonAsync("https://blazordb.herokuapp.com/api/Product/UpdateProductFromDB",hat);
        NavigationManager.NavigateTo("/hat");
    }
}